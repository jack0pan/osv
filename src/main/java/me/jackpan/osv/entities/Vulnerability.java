package me.jackpan.osv.entities;

import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Setter;
import me.jackpan.osv.github.models.SecurityAdvisory;
import me.jackpan.osv.github.models.SecurityVulnerability;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import java.io.Serializable;
import java.time.ZonedDateTime;
import java.util.Objects;

@Entity
@Getter
@RequiredArgsConstructor
@Setter
public class Vulnerability implements Serializable {
    @Id
    @GeneratedValue
    private Long id;
    private String advisoryId;
    private String advisorySummary;
    private String fistPatchedVersion;
    private String packageName;
    private String packageEcosystem;
    private String severity;
    private ZonedDateTime updatedAt;
    private String vulnerableVersionRange;

    public static Vulnerability of (SecurityVulnerability securityVulnerability) {
        Vulnerability vul = new Vulnerability();
        SecurityAdvisory advisory = securityVulnerability.getAdvisory();
        vul.setAdvisoryId(advisory.getGhsaId());
        vul.setAdvisorySummary(advisory.getSummary());
        if (Objects.nonNull(securityVulnerability.getFirstPatchedVersion())) {
            vul.setFistPatchedVersion(securityVulnerability.getFirstPatchedVersion().getIdentifier());
        }
        vul.setPackageName(securityVulnerability.getPackage().getName());
        vul.setPackageEcosystem(securityVulnerability.getPackage().getEcosystem());
        vul.setSeverity(securityVulnerability.getSeverity());
        vul.setUpdatedAt(ZonedDateTime.parse(securityVulnerability.getUpdatedAt()));
        vul.setVulnerableVersionRange(securityVulnerability.getVulnerableVersionRange());
        return vul;
    }
}
